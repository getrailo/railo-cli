<?xml version="1.0" encoding="UTF-8"?>
<project name="railo-cli" default="default">
    <description>
            Builds the CLI project into a runnable format
    </description>
	
	<property name="build.dir" location="./build/" />
	<property name="build.libs" location="./libs/" />
	<property name="railo.version" value="4.1.0.004" />
	<property name="libs.zipname"  value="railo-${railo.version}-jars.zip" /> <!-- -jars.zip |  .war | -jars.tar.gz -->
	<property name="libs.zipfolder" value="railo-${railo.version}-jars" />
	
	<property name="libs.url" value="http://www.getrailo.org/railo/remote/download/${railo.version}/custom/all/${libs.zipname}"/>
	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		  <classpath>
		    <pathelement location="libs/ant-contrib-1.0b3.jar"/>
		  </classpath>
	</taskdef>

	<property name="railoshell" location="build/railo.sh" />
	
	<target name="default" depends="root">
		
	</target>
	
	<target name="tests" depends="root">
	
		<exec executable="${railoshell}">
			<arg value="pm"/>
			<arg value="installed" />
		</exec>
		
		
		<exec executable="${railoshell}" />
				
		<exec executable="${railoshell}">
					<arg value="run"/>
					<arg value="webroot/index.cfm" />
		</exec>		
	</target>
	
	
	<target name="preferences">
		<!--
		
			<error status-code="true" template-404="/railo-context/templates/error/error.cfm" template-500="/error.cfm"/>
			</railo-configuration>
			
		-->
	
	</target>
	
	<target name="startup" depends="root">
		<!--
		/Users/markdrew/Dropbox/Projects/railo/railo-cli/dist/winstone-1.0.5-boot/META-INF/MANIFEST.MF
		-->
	</target>
	
	<target name="root" depends="webroot">
		<!-- items in dist to the root -->
				<copy todir="build/">
					<fileset dir="dist">
						<exclude name="winstone-1.0.5/"/>
						<exclude name="winstone-1.0.5-boot/"/>
					</fileset>
				</copy>
				<copy file="build/railo.sh" tofile="build/railo"/>
				<chmod perm="777" file="build/railo" />
				<chmod perm="777" file="build/railo.sh" />
	</target>
	
	
	
	
	<target name="webroot" depends="jar,winstone-jar">
		<!-- delete the current welcome to railo stuff 
		<delete dir="build/webroot">
			<include name="Application.cfc"/>
			<include name="index.cfm"/>
		</delete>
		<delete dir="build/webroot/res" />
		-->
		
		<!-- now copy the contents of the webroot
		 -->
			<copy todir="build/webroot" >
				<fileset dir="webroot/">
					<include name="*.cfm" />
					<include name="*.cfc" />
				</fileset>
			</copy>
		
			<mkdir dir="build/webroot/modules" />
			<mkdir dir="build/webroot/modules/pm" />
		
			<copy todir="build/webroot/modules/pm" > 
				<fileset dir="webroot/modules/pm" />
			</copy>
	</target>
   
	<target name="winstone-jar">
		<jar basedir="dist/winstone-1.0.5-boot/lib/winstone-1.0.5" destfile="dist/winstone-1.0.5-boot/lib/winstone-1.0.5.jar" />
		<jar basedir="dist/winstone-1.0.5-boot/" destfile="build/winstone.jar"  manifest="dist/winstone-1.0.5-boot/META-INF/MANIFEST.MF"/>
	</target>
	
	<target name="jar" depends="compile">
		<jar basedir="${build.dir}/classes" destfile="${build.dir}/lib/railo-cli.jar" manifest="src/META-INF/MANIFEST.MF" />
		
		<!-- cleanup -->
		<delete  dir="${build.dir}/classes"/>
	</target>
	
	<target name="compile" depends="lib-check">
		<javac srcdir="src" destdir="${build.dir}/classes" includeantruntime="true" >
			 <classpath id="unzipped">
			 	<fileset dir="libs/">
				 	 <include name="**/*.jar"/>
			 	</fileset>
			</classpath>
		 </javac>
	</target>
	
	<target name="lib-check" depends="clean">
		 <if>
			<available file="download/${libs.zipname}"/>
			       <else>
			        	<echo>Downloading ${libs.zipname}</echo>
			        	<get src="${libs.url}" dest="download/" />
			        	
			        </else>
			</if>
    		<unzip src="download/${libs.zipname}" dest="${build.dir}/lib/" />
			<!-- move them out of the folder -->
			<move todir="${build.dir}/lib">
				<fileset dir="${build.dir}/lib/${libs.zipfolder}">
					<include name="*.jar" />
				</fileset>
			</move>
			<delete dir="${build.dir}/lib/${libs.zipfolder}" /> 
				
		<!-- delete the slf binding -->
		
			<delete file="${build.dir}/lib/slf4j-log4j12-1.6.4.jar" />
			<delete file="${build.dir}/lib/railo-sl4j.jar" />
			<copy todir="build/lib/" file="libs/javax.servlet.jar" />
		
	</target>
	
	
   
	<target name="clean">
		<if>
			<available file="${build.dir}" type="dir" />
			<then>
				<echo>Found the directory, clear the contents</echo>
				<delete includeemptydirs="true">
				    <fileset dir="${build.dir}" includes="**/*"/>
				 </delete>
				<delete dir="${build.dir}/classes" includeemptydirs="true"/>
				<delete dir="${build.dir}/lib" includeemptydirs="true"/>
				<delete dir="${build.dir}/webroot" includeemptydirs="true"/>
			</then>
			<else>
				<echo>No dir, create it</echo>
				<mkdir dir="${build.dir}" />
			</else>
		</if>
		
		<!-- make sure the download folder exists -->
		<if>
			<available file="download/" type="dir" />
			<else>
				<mkdir dir="download/" />
			</else>
		</if>
		
		
		<mkdir dir="${build.dir}/classes" />
		<mkdir dir="${build.dir}/lib" />
		<mkdir dir="${build.dir}/webroot" />
		
		
		
	</target>
	   
</project>
