<?xml version="1.0" encoding="UTF-8"?>
<project name="railo-cli" default="default">
    <description>
            Builds the CLI project into a runnable format
    </description>
	
	<property name="build.dir" location="./build/" />
	<property name="build.libs" location="./libs/" />
	<property name="railo.version" value="4.1.0.004" />
	<property name="libs.zipname"  value="railo-${railo.version}.war" />
	<property name="libs.url" value="http://www.getrailo.org/railo/remote/download/${railo.version}/custom/all/${libs.zipname}"/>
	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		  <classpath>
		    <pathelement location="libs/ant-contrib-1.0b3.jar"/>
		  </classpath>
	</taskdef>

	
	
	<target name="default" depends="webroot">
		
		<!-- items in dist to the root -->
		<copy todir="build/">
			<fileset dir="dist">
			</fileset>
		</copy>
		<copy todir="build/lib/" file="libs/javax.servlet.jsp-2.2.0.v201112011158.jar" />
					
		<chmod perm="777" file="build/railo.sh" />
		
	</target>
	
	<target name="webroot" depends="jar">
		<!-- delete the current welcome to railo stuff -->
		<delete dir="build/webroot">
			<include name="Application.cfc"/>
			<include name="index.cfm"/>
		</delete>
		<delete dir="build/webroot/res" />
		
		<!-- now copy the contents of the webroot -->
			<copy todir="build/webroot" >
				<fileset dir="webroot/">
					<include name="*.cfm" />
					<include name="*.cfc" />
				</fileset>
			</copy>
	</target>
   
	
	
	<target name="jar" depends="compile">
		<jar basedir="${build.dir}/classes" destfile="${build.dir}/webroot/WEB-INF/lib/railo-cli.jar" manifest="src/META-INF/MANIFEST.MF" />
		
		<!-- cleanup -->
		<delete  dir="${build.dir}/classes"/>
	</target>
	
	<target name="compile" depends="lib-check">
		<javac srcdir="src" destdir="${build.dir}/classes" >
			 <classpath id="unzipped">
			 	<fileset dir="libs/">
				 	 <include name="**/*.jar"/>
			 	</fileset>
			</classpath>
		 </javac>
	</target>
	
	<target name="lib-check" depends="clean">
		 <if>
			<available file="download/${libs.zipname}"/>
			       <else>
			        	<echo>Downloading WAR</echo>
			        	<get src="${libs.url}" dest="download/" />
			        	
			        </else>
			</if>
    		<unzip src="download/${libs.zipname}" dest="${build.dir}/webroot/" />
		
	</target>
	
	
   
	<target name="clean">
		<if>
			<available file="${build.dir}" type="dir" />
			<then>
				<echo>Found the directory, clear the contents</echo>
				<delete includeemptydirs="true">
				    <fileset dir="${build.dir}" includes="**/*"/>
				 </delete>
				<delete dir="${build.dir}/classes" includeemptydirs="true"/>
				<delete dir="${build.dir}/lib" includeemptydirs="true"/>
				<delete dir="${build.dir}/webroot" includeemptydirs="true"/>
			</then>
			<else>
				<echo>No dir, create it</echo>
				<mkdir dir="${build.dir}" />
			</else>
		</if>
		
		<!-- make sure the download folder exists -->
		<if>
			<available file="download/" type="dir" />
			<else>
				<mkdir dir="download/" />
			</else>
		</if>
		
		
		<mkdir dir="${build.dir}/classes" />
		<mkdir dir="${build.dir}/lib" />
		<mkdir dir="${build.dir}/webroot" />
		
		
		
	</target>
	   
</project>
